/*
 * This Spock specification was generated by the Gradle 'init' task.
 */
package io.github.Chase22.telegram.telegrambotapimock.test


import io.github.Chase22.telegram.telegrambotapimock.TelegramBotApiMock
import io.github.Chase22.telegram.telegrambotapimock.util.ApiMockBuilder
import io.undertow.util.StatusCodes
import spock.lang.Specification
import spock.lang.Subject

import java.net.http.HttpClient
import java.net.http.HttpRequest

import static io.undertow.util.StatusCodes.OK
import static java.net.http.HttpRequest.BodyPublishers.noBody
import static java.net.http.HttpResponse.BodyHandlers.ofString

class TelegramBotApiMockSpec extends Specification {

    final static int port = 50300
    final static client = HttpClient.newBuilder().build()

    @Subject
    TelegramBotApiMock apiMock = ApiMockBuilder.default

    def setup() {
        apiMock.stop()
        apiMock.start(port)
    }

    def "Should start a server on the given port"() {
        given:
        def request = HttpRequest.newBuilder()
                .method("GET", noBody())
                .uri(URI.create("http://localhost:${port}/health"))
                .build()

        expect:
        client.send(request, ofString()).statusCode() == OK
    }
}
